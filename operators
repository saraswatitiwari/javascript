Basic	Operators

Basic operators allow you to manipulate values.
Concatenation
var foo = ’hello ’;
var bar = ’world ’;
console . log ( foo + ’ ’ + bar ); // ’hello world ’

Multiplication and division
2 * 3;
2 / 3;

Incrementing and decrementing
var i = 1;
var j = ++i; // pre - increment : j equals 2; i equals 2
var k = i ++; // post - increment : k equals 2; i equals 3

Operations	on	Numbers	&	Strings
In JavaScript, numbers and strings will occasionally behave in ways you might not expect.
Addition vs. concatenation
var foo = 1;
var bar = ’2 ’;
console . log ( foo + bar ); // 12. uh oh

Forcing a string to act as a number
var foo = 1;
var bar = ’2 ’;
// coerce the string to a number
console . log ( foo + Number ( bar ));

The Number constructor, when called as a function (like above) will have the effect of casting its argument
into a number. You could also use the unary plus operator, which does the same thing:
Forcing a string to act as a number (using the unary-plus operator)
console . log ( foo + + bar );

Logical	Operators
Logical operators allow you to evaluate a series of operands using AND and OR operations.
Logical AND and OR operators
var foo = 1;
var bar = 0;
var baz = 2;
foo || bar ; // returns 1 , which is true
bar || foo ; // returns 1 , which is true
foo && bar ; // returns 0 , which is false
foo && baz ; // returns 2 , which is true
baz && foo ; // returns 1 , which is true

Comparison	Operators
Comparison operators allow you to test whether values are equivalent or whether values are identical.

Comparison operators
var foo = 1;
var bar = 0;
var baz = ’1 ’;
var bim = 2;

foo == bar ; // returns false
foo != bar ; // returns true
foo == baz ; // returns true ; careful !

foo === baz ; // returns false
foo !== baz ; // returns true
foo === parseInt ( baz ); // returns true

foo > bim ; // returns false
bim > baz ; // returns true
foo <= baz ; // returns true

Conditional	Code
Sometimes you only want to run a block of code under certain conditions. Flow control — via if and
else blocks — lets you run code only under certain conditions.

Flow control
var foo = true ;
var bar = false ;

if ( bar ) {
     // this code will never run
     console . log ( ’ hello ! ’);
}

if ( bar ) {
    // this code won ’t run
} else {
    if ( foo ) {
          // this code will run
    } else {
         // this code would run if foo and bar were both false
    }
}